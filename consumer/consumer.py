from kafka import KafkaConsumer
import json
import os
import time
import signal
import sys

# Kafka –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
KAFKA_SERVERS = os.getenv('KAFKA_BOOTSTRAP_SERVERS', 'localhost:9092')
TOPICS = ['test-topic', 'orders', 'users', 'metrics', 'errors']  # —Ç–æ–ø–∏–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

def signal_handler(sig, frame):
    print('\n–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∫–æ–Ω—Å—å—é–º–µ—Ä–∞...')
    sys.exit(0)

def create_consumer():
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kafka —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
    max_retries = 10
    for i in range(max_retries):
        try:
            consumer = KafkaConsumer(
                *TOPICS,
                bootstrap_servers=[KAFKA_SERVERS],
                group_id='test-consumer-group',
                auto_offset_reset='earliest',  # —á–∏—Ç–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞
                enable_auto_commit=True,
                value_deserializer=lambda x: json.loads(x.decode('utf-8')) if x else None,
                key_deserializer=lambda x: x.decode('utf-8') if x else None
            )
            return consumer
        except Exception as e:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {i+1}/{max_retries} –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Kafka –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
            time.sleep(5)
    raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Kafka")

def main():
    print("–ó–∞–ø—É—Å–∫ Kafka –∫–æ–Ω—Å—å—é–º–µ—Ä–∞...")
    print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: {KAFKA_SERVERS}")
    print(f"–°–ª—É—à–∞–µ–º —Ç–æ–ø–∏–∫–∏: {TOPICS}")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    try:
        consumer = create_consumer()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ Kafka")
        print("–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        for message in consumer:
            print(f"""
üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:
   –¢–æ–ø–∏–∫: {message.topic}
   –ü–∞—Ä—Ç–∏—Ü–∏—è: {message.partition}
   –û—Ñ—Å–µ—Ç: {message.offset}
   –ö–ª—é—á: {message.key}
   –ó–Ω–∞—á–µ–Ω–∏–µ: {message.value}
   –í—Ä–µ–º—è: {time.strftime('%Y-%m-%d %H:%M:%S')}
{"="*50}""")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        try:
            consumer.close()
            print("–ö–æ–Ω—Å—å—é–º–µ—Ä –∑–∞–∫—Ä—ã—Ç")
        except:
            pass

if __name__ == '__main__':
    main() 